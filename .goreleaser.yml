project_name: polygon-edge

release:
  disable: false
  draft: true
  prerelease: auto

builds:
  - id: darwin-amd64
    main: ./main.go
    binary: polygon-edge
    goos:
      - darwin
    goarch:
      - amd64
    env:
      - CC=o64-clang
      - CXX=o64-clang++
    ldflags:
      -s -w -X 'github.com/LaChain/polygon-edge/versioning.Version=v{{ .Version }}'

  - id: darwin-arm64
    main: ./main.go
    binary: polygon-edge
    goos:
      - darwin
    goarch:
      - arm64
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
    ldflags:
      -s -w -X 'github.com/LaChain/polygon-edge/versioning.Version=v{{ .Version }}'

  - id: linux-amd64
    main: ./main.go
    binary: polygon-edge
    goos:
      - linux
    goarch:
      - amd64
    env:
      - CC=gcc
      - CXX=g++
    ldflags:
      # We need to build a static binary because we are building in a glibc based system and running in a musl container
      -s -w -linkmode external -extldflags "-static" -X 'github.com/LaChain/polygon-edge/versioning.Version=v{{ .Version }}'
    tags:
      - netgo
      - osusergo

  - id: linux-arm64
    main: ./main.go
    binary: polygon-edge
    goos:
      - linux
    goarch:
      - arm64
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    ldflags:
      # We need to build a static binary because we are building in a glibc based system and running in a musl container
      -s -w -linkmode external -extldflags "-static" -X 'github.com/LaChain/polygon-edge/versioning.Version=v{{ .Version }}'
    tags:
      - netgo
      - osusergo

archives:
  - files:
      - LICENSE
      - README.md

snapshot:
  name_template: "{{ .Tag }}.next"
